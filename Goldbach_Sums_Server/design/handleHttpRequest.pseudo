class handleHttpRequest 
  handleHttpRequest(Queue &cola) do
    /* Se encarga de hacer todo lo que hacia el metodo handleClientConnection de httpServer con la diferencia de que existe
    una cant limitada de instancias de esta clase (tantas como conexiones permitidas) entonces cada vez que una se libera
    va y toma un socket (cliente) de la cola y lo atiende.
    */
    while (true) do
      // Va sacando clientes de la cola para atenderlos. Todo lo demas queda igual.
      client = cola.pop()

      // Create an object that parses the HTTP request from the socket
      HttpRequest httpRequest(client);

      // If the request is not valid or an error happened
      if (!httpRequest.parse()) {
        // Non-valid requests are normal after a previous valid request. Do not
        // close the connection yet, because the valid request may take time to
        // be processed. Just stop waiting for more requests
        break;
      }

      // A complete HTTP client request was received. Create an object for the
      // server responds to that client's request
      HttpResponse httpResponse(client);

      // Give subclass a chance to respond the HTTP request
      const bool handled = this->handleHttpRequest(httpRequest, httpResponse);

      // If subclass did not handle the request or the client used HTTP/1.0
      if (!handled || httpRequest.getHttpVersion() == "HTTP/1.0") {
        // The socket will not be more used, close the connection
        client.close();
        break;
      }
    end
  end
end